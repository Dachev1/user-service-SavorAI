server:
  port: 8081
  servlet:
    context-path: /

spring:
  application:
    name: user-service
  
  # Import environment variables
  config:
    import: optional:classpath:.env.properties
  
  # Database configuration
  datasource:
    url: jdbc:mysql://localhost:3306/savorAI_user?createDatabaseIfNotExist=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  # JPA configuration  
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  
  # Email configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# Cache Configuration (Moved under the main spring block)
cache:
  type: caffeine
  cache-names: users,usernames,userStats,jwt_blacklist,user_invalidations
  caffeine:
    spec: maximumSize=500,expireAfterAccess=30m # Adjust spec as needed

# Custom Email Service Configuration
email-service-config:
  app-name: ${spring.application.name} # Reference application name
  from-address: ${MAIL_USERNAME} # Reference from .env
  contact-recipient: ${CONTACT_RECIPIENT:your-contact-recipient@example.com} # Reference from .env (add CONTACT_RECIPIENT=... to .env) or uses default
  service-base-url: ${app.service.url} # Reference app.service.url
  packages-to-scan: dev.idachev.userservice.web

# Application configuration
app:
  service:
    url: http://localhost:8081
  frontend:
    url: http://localhost:5173

# Security configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000 # 24 hours

# CORS configuration
cors:
  allowed-origins: http://localhost:5173
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: Authorization,Content-Type,X-Requested-With,X-Request-ID
  exposed-headers: X-Request-ID
  allow-credentials: true

# Logging configuration
logging:
  level:
    root: INFO
    dev.idachev.userservice: DEBUG
    org.hibernate.SQL: DEBUG

# API documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    disable-swagger-default-url: true

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,env,loggers,caches
  endpoint:
    health:
      show-details: when_authorized
      # Exclude Redis from health checks since it's not being used
      group:
        readiness:
          include: db # Include only DB for readiness probe example
        liveness:
          include: ping # Include only ping for liveness probe example
  health:
    redis:
      enabled: false # Disable Redis health indicator
  metrics:
    tags:
      application: ${spring.application.name}
