package dev.idachev.recipeservice.web.dto;

import dev.idachev.recipeservice.model.DifficultyLevel;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

/**
 * Data Transfer Object for recipe responses.
 * Contains all recipe data including metadata and user interaction information.
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Schema(description = "Recipe data with detailed information returned from API")
public class RecipeResponse {
    // Identifiers
    @Schema(description = "Unique identifier of the recipe", example = "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11")
    private UUID id;
    
    @Schema(description = "ID of the user who created this recipe", example = "b5eebc99-9c0b-4ef8-bb6d-6bb9bd380a22")
    private UUID createdById;
    
    // Basic recipe information
    @Schema(description = "Recipe title", example = "Spaghetti Carbonara")
    private String title;
    
    @Schema(description = "Recipe description", example = "Classic Italian pasta dish with eggs, cheese, pancetta, and pepper")
    private String description;
    
    @Schema(description = "Step-by-step cooking instructions", example = "1. Boil pasta until al dente\n2. In a separate pan, cook pancetta...")
    private String instructions;
    
    @Schema(description = "URL to recipe image", example = "https://example.com/images/carbonara.jpg")
    private String imageUrl;
    
    @Schema(description = "List of ingredients required for the recipe", example = "[\"200g spaghetti\", \"100g pancetta\", \"2 large eggs\"]")
    private List<String> ingredients;
    
    // Recipe metadata
    @Schema(description = "Total preparation and cooking time in minutes", example = "30")
    private Integer totalTimeMinutes;
    
    @Schema(description = "Recipe difficulty level", example = "MEDIUM", enumAsRef = true)
    private DifficultyLevel difficulty;
    
    @Schema(description = "Whether the recipe was generated by AI", example = "false")
    private Boolean isAiGenerated;
    
    // Timestamps
    @Schema(description = "Date and time when the recipe was created", example = "2023-03-15T10:15:30")
    private LocalDateTime createdAt;
    
    @Schema(description = "Date and time when the recipe was last updated", example = "2023-03-16T14:30:45")
    private LocalDateTime updatedAt;
    
    // Nutritional information
    @Schema(description = "Nutritional information for the recipe")
    private MacrosDto macros;
    
    // User interaction data
    @Schema(description = "Whether the recipe is in the current user's favorites", example = "true")
    private Boolean isFavorite;
    
    @Schema(description = "Number of users who have favorited this recipe", example = "42")
    private Long favoriteCount;
} 