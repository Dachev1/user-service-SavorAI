plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.github.ben-manes.versions' version '0.50.0'
    id 'org.owasp.dependencycheck' version '9.0.8'
}

group = 'dev.idachev'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    configureEach {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.3.0'
    
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    runtimeOnly 'com.mysql:mysql-connector-j'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('dependencyUpdates').configure {
    checkForGradleUpdate = true
    outputFormatter = 'html'
    outputDir = 'build/reports/dependencyUpdates'
    reportfileName = 'report'
}

springBoot {
    buildInfo()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
    options.encoding = 'UTF-8'
} 