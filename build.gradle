// Basic project configuration
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.github.ben-manes.versions' version '0.50.0'
}

// Project identification
group = 'dev.idachev'
version = '0.0.1-SNAPSHOT'

// Java configuration
java {
    sourceCompatibility = '17'
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Repository configuration
repositories {
    mavenCentral()
}

// Version constants
ext {
    springdocVersion = '2.3.0'
    jjwtVersion = '0.11.5'
    lombokVersion = '1.18.30'
    dotenvVersion = '4.0.0'
}

dependencies {
    // Spring Boot core
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // API Documentation
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-common:${springdocVersion}"

    // Utilities
    implementation "me.paulschwarz:spring-dotenv:${dotenvVersion}"

    // JWT Support
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Cloud integration - Cloudinary
    implementation('com.cloudinary:cloudinary-http44:1.34.0') {
        // Exclude commons-logging from Cloudinary HTTP44
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.testcontainers:junit-jupiter'
    
    // Exclude commons-logging from all dependencies
    configurations.all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

// Test configuration
tasks.named('test') {
    useJUnitPlatform()
}

// Dependency updates configuration
tasks.named('dependencyUpdates').configure {
    checkForGradleUpdate = true
    outputFormatter = 'html'
    outputDir = 'build/reports/dependencyUpdates'
    reportfileName = 'report'
}

// Build information
springBoot {
    buildInfo()
}

// Java compiler options
tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
    options.encoding = 'UTF-8'
} 